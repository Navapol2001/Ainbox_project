name: Deploy Services

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Configure gcloud CLI
        run: |
          gcloud config set project ${{ secrets.PROJECT_ID }}
          gcloud auth configure-docker asia-southeast1-docker.pkg.dev

      - name: Deploy AI Service
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          cd ai
          chmod +x cloud_run_deploy.sh
          ./cloud_run_deploy.sh

      - name: Deploy Backend Service
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          cd backend
          chmod +x cloud_run_deploy.sh
          ./cloud_run_deploy.sh

      - name: Deploy Portal Service
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          cd portal
          chmod +x cloud_run_deploy.sh
          ./cloud_run_deploy.sh

      - name: Deploy Landing Page Service
        env:
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
        run: |
          cd landing_page
          chmod +x cloud_run_deploy.sh
          ./cloud_run_deploy.sh

          - name: Configure Load Balancer
          run: |
            # Create serverless NEG for each Cloud Run service
            gcloud compute network-endpoint-groups create ainbox-neg \
              --region=asia-southeast1 \
              --network-endpoint-type=serverless \
              --cloud-run-service=ainbox

            gcloud compute network-endpoint-groups create backend-neg \
              --region=asia-southeast1 \
              --network-endpoint-type=serverless \
              --cloud-run-service=backend

            gcloud compute network-endpoint-groups create protal-neg \
              --region=asia-southeast1 \
              --network-endpoint-type=serverless \
              --cloud-run-service=protal

            gcloud compute network-endpoint-groups create landingpage-neg \
              --region=asia-southeast1 \
              --network-endpoint-type=serverless \
              --cloud-run-service=landingpage

            # Create backend services and add NEGs
            gcloud compute backend-services create ainbox-backend \
              --global \
              --load-balancing-scheme=EXTERNAL_MANAGED
            gcloud compute backend-services add-backend ainbox-backend \
              --global \
              --network-endpoint-group=ainbox-neg \
              --network-endpoint-group-region=asia-southeast1

            gcloud compute backend-services create backend-backend \
              --global \
              --load-balancing-scheme=EXTERNAL_MANAGED
            gcloud compute backend-services add-backend backend-backend \
              --global \
              --network-endpoint-group=backend-neg \
              --network-endpoint-group-region=asia-southeast1

            gcloud compute backend-services create protal-backend \
              --global \
              --load-balancing-scheme=EXTERNAL_MANAGED
            gcloud compute backend-services add-backend protal-backend \
              --global \
              --network-endpoint-group=protal-neg \
              --network-endpoint-group-region=asia-southeast1

            gcloud compute backend-services create landingpage-backend \
              --global \
              --load-balancing-scheme=EXTERNAL_MANAGED
            gcloud compute backend-services add-backend landingpage-backend \
              --global \
              --network-endpoint-group=landingpage-neg \
              --network-endpoint-group-region=asia-southeast1

            # Create URL map
            gcloud compute url-maps create my-load-balancer \
              --default-service landingpage-backend

            # Add path matcher
            gcloud compute url-maps add-path-matcher my-load-balancer \
              --path-matcher-name=pathmap \
              --default-service=landingpage-backend \
              --path-rules="/portal/*=protal-backend,/api/*=backend-backend,/ai/*=ainbox-backend"

            # Create target HTTP proxy
            gcloud compute target-http-proxies create my-load-balancer-proxy \
              --url-map my-load-balancer

            # Create forwarding rule
            gcloud compute forwarding-rules create http-content-rule \
              --global \
              --target-http-proxy=my-load-balancer-proxy \
              --ports=80 \
              --load-balancing-scheme=EXTERNAL_MANAGED
